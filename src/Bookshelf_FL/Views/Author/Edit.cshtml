@model Bookshelf_FL.ViewModels.AuthorViewModels.AuthorEditViewModel

@{
    ViewBag.Title = "Редагування автора";
}

<h1>Редагування автора</h1>

@if (!string.IsNullOrEmpty(Model.CoverPath))
{
    <div class="form-group">
        <img id="CoverOfEntity" style="margin-top: 0%" src="@Url.Content(Model.CoverPath)" alt="@Model.LastName" />
    </div>

    <form asp-controller="Author" asp-action="DeleteImage" method="post">
        <input type="hidden" name="id" value="@Model.Id" />
        <button type="submit">Видалити зображення</button>
    </form>
}

<form asp-action="Edit" asp-controller="Author" enctype="multipart/form-data">
    <div asp-validation-summary="All"></div>

    <div>
        <input type="hidden" asp-for="Id" />
    </div>

    <div class="form-group">
        <label asp-for="CoverImage">Фото</label>
        <input asp-for="CoverImage" type="file" />
    </div>

    <div>
        <label asp-for="FirstName">Ім'я</label>
        <input asp-for="FirstName" />
    </div>

    <div>
        <label asp-for="MiddleName">По-батькові / друге ім'я'</label>
        <input asp-for="MiddleName" />
    </div>

    <div>
        <label asp-for="LastName">Прізвище</label>
        <input asp-for="LastName" />
    </div>

    <label asp-for="Country">Країна:</label>
    <select asp-for="Country" id="countrySelect">
        <option value="">Оберіть країну</option>
    </select>

    <div>
        <label asp-for="Description">Опис</label>
        <textarea asp-for="Description"></textarea>
    </div>

    <select asp-for="SelectedBooks" multiple style="width: 300px; height: 200px;">
        @if (Model.Books != null)
        {
            @foreach (var book in Model.Books)
            {
                <option value="@book.Id">@book.BookName</option>
            }
        }
    </select>

    <div class="form-group">
        <input type="submit" value="Зберегти" />
    </div>

</form>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        fetch("https://restcountries.com/v3.1/all")
            .then(response => response.json())
            .then(data => {
                const countrySelect = document.getElementById("countrySelect");

                data.sort((a, b) => {
                    const countryNameA = a.name.common.toLowerCase();
                    const countryNameB = b.name.common.toLowerCase();
                    return countryNameA.localeCompare(countryNameB);
                });

                data.forEach(country => {
                    const option = document.createElement("option");
                    option.value = country.name.common;
                    option.text = country.name.common;
                    countrySelect.appendChild(option);
                });

                // Тепер, коли опції завантажені, можна встановити вибрану країну, якщо вона існує
                const selectedCountry = "@Model.Country";
                if (selectedCountry) {
                    const option = countrySelect.querySelector(`[value="${selectedCountry}"]`);
                    if (option) {
                        option.selected = true;
                    }
                }
            })
            .catch(error => {
                console.error("Помилка при отриманні даних:", error);
            });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var booksBefore = @Html.Raw(Json.Serialize(Model.SelectedBooks));
        var booksSelect = document.getElementById("booksSelect");

        for (var i = 0; i < booksSelect.options.length; i++) {
            var option = booksSelect.options[i];
            if (booksBefore.includes(parseInt(option.value))) {
                option.selected = true;
            }
        }
    });
</script>
